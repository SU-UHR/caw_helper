<?php
/**
 * @file
 */

/**
 * Implements hook_help().
 */
function caw_helper_help($path, $arg) {
  switch ($path) {
    case 'admin/help#caw':
      return '<p>' . t('Please contact your site administrator') . '</p>';
  }
}

/**
 * Set the bean blocks title to "<none>" if bean has a title and block does not.
 * @param  [type] &$blocks     [description]
 * @param  [type] $theme       [description]
 * @param  [type] $code_blocks [description]
 * @return [type]              [description]
 */
function caw_helper_block_view_alter(&$data, $block) {
  if ($block->module == "bean" && empty($block->title)) {
    $block->title = "<none>";
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function caw_helper_theme_registry_alter(&$theme_registry) {
  if (isset($theme_registry['facetapi_count'])) {
    $theme_registry['facetapi_count']['function'] = "caw_helper_facetapi_count";
  }
}


/**
 * [caw_helper_facetapi_count_alter description]
 * @param  [type] &$vars [description]
 * @return [type]        [description]
 */
function caw_helper_facetapi_count(&$variables) {
  return '<span class="facetapi-count">(' . (int) $variables['count'] . ')</span>';
}

/**
 * Implements hook_init().
 */
function caw_helper_init() {

  $file_path = drupal_get_path('module', 'caw_helper') . "/css/caw_helper.css";
  $conditions = "admin
admin*
node/*/edit
block/*/edit*
block/add*
node/add*
user/*/edit
node/*/delete";

  $css_rules = array();
  $css_rules['rule_conditions'] = $conditions;
  $css_rules['rule_type'] = CSS_INJECTOR_PAGES_NOTLISTED;

  $pass = _css_injector_evaluate_rule($css_rules);
  if ($pass) {
    drupal_add_css($file_path, array('type' => 'file', 'group' => CSS_THEME, 'media' => "all", 'preprocess' => TRUE, 'weight' => 300));
  }

}

/**
 * Check the box if a resource is checked.
 * @param  [type] &$build    [description]
 * @param  [type] &$settings [description]
 * @return [type]            [description]
 */
function caw_helper_facet_items_alter(&$build, &$settings) {
  if ($settings->facet == "type") {
    $fs = isset($_GET['f']) ? $_GET['f'] : array();
    foreach ($fs as $index => $value) {
      if (strpos($value, 'field_s_resource_type') !== FALSE) {
        $build['stanford_resource']["#active"] = 1;
        break;
      }
    }
    // foreach($build as $key => $item) {
    //   // $build[$key]["#markup"] = drupal_strtoupper($item["#markup"]);
    // }
  }
}
